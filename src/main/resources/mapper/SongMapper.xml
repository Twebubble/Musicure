<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.github.Twebubble.musicure.mapper.SongMapper">
  <resultMap id="BaseResultMap" type="io.github.Twebubble.musicure.model.domain.Song">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="singer_id" jdbcType="INTEGER" property="singerId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="introduction" jdbcType="VARCHAR" property="introduction" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="url" jdbcType="VARCHAR" property="url" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="io.github.Twebubble.musicure.model.domain.Song">
    <result column="lyric" jdbcType="LONGVARCHAR" property="lyric" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, singer_id, name, introduction, create_time, update_time, pic, url
  </sql>
  <sql id="Blob_Column_List">
    lyric
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="io.github.Twebubble.musicure.service.impl.SongImpl" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from song
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="io.github.Twebubble.musicure.service.impl.SongImpl" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from song
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from song
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from song
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="io.github.Twebubble.musicure.model.domain.Song">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into song (singer_id, name, introduction, 
      create_time, update_time, pic, 
      url, lyric)
    values (#{singerId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{introduction,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{pic,jdbcType=VARCHAR}, 
      #{url,jdbcType=VARCHAR}, #{lyric,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="io.github.Twebubble.musicure.model.domain.Song">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into song
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="singerId != null">
        singer_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="pic != null">
        pic,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="lyric != null">
        lyric,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="singerId != null">
        #{singerId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="lyric != null">
        #{lyric,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="io.github.Twebubble.musicure.model.domain.Song">
    update song
    <set>
      <if test="singerId != null">
        singer_id = #{singerId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="lyric != null">
        lyric = #{lyric,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="io.github.Twebubble.musicure.model.domain.Song">
    update song
    set singer_id = #{singerId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      pic = #{pic,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      lyric = #{lyric,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.github.Twebubble.musicure.model.domain.Song">
    update song
    set singer_id = #{singerId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      pic = #{pic,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>